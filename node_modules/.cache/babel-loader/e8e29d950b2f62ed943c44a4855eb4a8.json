{"ast":null,"code":"var _jsxFileName = \"/home/abdullahps/Desktop/hackaton-next/src/components/GithubList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-apollo-hooks';\nimport { fbQuery } from '../queries/queries';\nimport { MasterDetail } from './MasterDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GitHubList = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(fbQuery);\n  const [fbList, setfbList] = useState([]);\n  useEffect(() => {\n    data && setfbList(data.search.edges);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(MasterDetail, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GitHubList, \"8kdMNMvo4VSyX97+hB0sr6REiFc=\", false, function () {\n  return [useQuery];\n});\n\n_c = GitHubList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GitHubList\");","map":{"version":3,"sources":["/home/abdullahps/Desktop/hackaton-next/src/components/GithubList.tsx"],"names":["React","useEffect","useState","useQuery","fbQuery","MasterDetail","GitHubList","data","loading","error","fbList","setfbList","search","edges"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AACA,OAAO,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AASxC,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAqBN,QAAQ,CAACC,OAAD,CAAnC;AACA,QAAM,CAACM,MAAD,EAAQC,SAAR,IAAmBT,QAAQ,CAAS,EAAT,CAAjC;AACAD,EAAAA,SAAS,CAAC,MAAI;AAChBM,IAAAA,IAAI,IAAII,SAAS,CAACJ,IAAI,CAACK,MAAL,CAAYC,KAAb,CAAjB;AACG,GAFQ,EAEP,CAACN,IAAD,CAFO,CAAT;AAIA,sBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBM;;GAAMD,U;UASgBH,Q;;;KAThBG,U","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-apollo-hooks';\nimport { fbQuery } from '../queries/queries';\nimport { MasterDetail } from './MasterDetail';\nexport const GitHubList: React.FC = () => {\n\n  interface node{\n    createdAt:string,\n    name:string,\n    url:string\n\n  }\n\n  const {data,loading,error}=useQuery(fbQuery)\n  const [fbList,setfbList]=useState<node[]>([]);\n  useEffect(()=>{\ndata && setfbList(data.search.edges)\n  },[data])\n\n  return <MasterDetail></MasterDetail>\n};\n"]},"metadata":{},"sourceType":"module"}