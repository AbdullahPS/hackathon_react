{"ast":null,"code":"export const transformValue = val => {\n  const clonedVal = { ...val\n  };\n  const solution = {};\n\n  for (const [key, value] of Object.entries(clonedVal)) {\n    solution[key] = doTransformation(value);\n  }\n\n  return solution;\n};\n\nconst doTransformation = arrayElement => {\n  if (typeof arrayElement === 'number') return arrayElement + 1;else if (typeof arrayElement === 'string') return arrayElement + ' AE';else {\n    const newArray = arrayElement.map(el => doTransformation(el));\n    return newArray;\n  }\n};","map":{"version":3,"sources":["/home/abdullahps/Desktop/hackaton-next/src/Question3/jsQuestion.ts"],"names":["transformValue","val","clonedVal","solution","key","value","Object","entries","doTransformation","arrayElement","newArray","map","el"],"mappings":"AAIA,OAAO,MAAMA,cAAc,GAAIC,GAAD,IAA2B;AACrD,QAAMC,SAAgB,GAAE,EAAC,GAAGD;AAAJ,GAAxB;AACA,QAAME,QAA+B,GAAC,EAAtC;;AACA,OAAI,MAAM,CAACC,GAAD,EAAKC,KAAL,CAAV,IAAyBC,MAAM,CAACC,OAAP,CAAeL,SAAf,CAAzB,EAAmD;AAC/CC,IAAAA,QAAQ,CAACC,GAAD,CAAR,GAAcI,gBAAgB,CAACH,KAAD,CAA9B;AAEH;;AAID,SAAOF,QAAP;AACH,CAXM;;AAYP,MAAMK,gBAAgB,GAAEC,YAAD,IAA0C;AAC7D,MAAI,OAAOA,YAAP,KAAuB,QAA3B,EACA,OAAOA,YAAY,GAAC,CAApB,CADA,KAEK,IAAG,OAAOA,YAAP,KAAsB,QAAzB,EACL,OAAOA,YAAY,GAAE,KAArB,CADK,KAGL;AACI,UAAMC,QAAQ,GAACD,YAAY,CAACE,GAAb,CAAiBC,EAAE,IAAEJ,gBAAgB,CAACI,EAAD,CAArC,CAAf;AACA,WAAOF,QAAP;AACH;AACJ,CAVD","sourcesContent":["\ntype arrayElement=string| number|arrayElement[]\n\n\nexport const transformValue = (val: unknown): unknown => {\n    const clonedVal:Object ={...val as Record<string,unknown>}\n    const solution:Record<string,unknown>={}\n    for(const [key,value] of Object.entries(clonedVal)){\n        solution[key]=doTransformation(value)\n\n    }\n\n    \n    \n    return solution;\n}\nconst doTransformation=(arrayElement:arrayElement):arrayElement=>{\n    if (typeof arrayElement ==='number')\n    return arrayElement+1;\n    else if(typeof arrayElement==='string')\n    return arrayElement+ ' AE'\n    else \n    {\n        const newArray=arrayElement.map(el=>doTransformation(el))\n        return newArray\n    }\n}\n"]},"metadata":{},"sourceType":"module"}